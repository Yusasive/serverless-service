service: content-service
frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  timeout: 30
  memorySize: 512
  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:3010
        - http://localhost:3011
      allowedMethods:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
        - OPTIONS
      allowedHeaders:
        - Content-Type
        - Authorization
        - X-Amz-Date
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Requested-With
      allowCredentials: true
  environment:
    STAGE: ${self:provider.stage}
    NODE_ENV: ${self:provider.stage}
    DB_HOST: ${env:DB_HOST, 'localhost'}
    DB_PORT: ${env:DB_PORT, '5432'}
    DB_NAME: ${env:DB_NAME, 'litf-db-content-service'}
    DB_USER: ${env:DB_USER, 'root'}
    DB_PASSWORD: ${env:DB_PASSWORD, 'root'}
    INTERNAL_SERVICE_KEY: ${env:INTERNAL_SERVICE_KEY, 'INTERNAL_SECRET'}

functions:
  content:
    handler: app/bootstrap.handler
    events:
      - httpApi:
          path: /content
          method: ANY
      - httpApi:
          path: /content/{proxy+}
          method: ANY

  internal:
    handler: app/handlers/internalHandler.handler
    events:
      - httpApi:
          path: /internal
          method: ANY
      - httpApi:
          path: /internal/{proxy+}
          method: ANY

plugins:
  - serverless-offline
  - serverless-plugin-optimize

custom:
  serverless-offline:
    httpPort: 4008
    lambdaPort: 3008
    noPrependStageInUrl: true
    host: 0.0.0.0
